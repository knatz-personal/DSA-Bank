@model WebPortal.Models.RoleModel
@using (Html.BeginForm("Role", "Users", FormMethod.Post, new { id = "roleform" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Any())
        {
            <div id="editAlert" class="alert alert-danger" data-dismiss="alert" role="alert">
                <button type="button" class="close" aria-label="Close">
                    <span aria-hidden="true"><i class=" glyphicon glyphicon-remove"></i></span>
                </button>
                @Html.ValidationSummary(true, "Error: ")
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.UserRoles, new { @class = "control-label  col-md-4" })
            <div class="col-md-8">
                @Html.ListBoxFor(model => model.Roles, new MultiSelectList(Model.UserRoles, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })<br />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Roles, new { @class = "control-label  col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.RoleId, Model.Roles, new { @class = "form-control" })
                <div class="form-inline" style="width: 335px;">
                    <button id="Allocate" class="btn btn-sm btn-warning col-md-5" type="submit">
                        <span>Allocate</span>
                        <i class="glyphicon glyphicon-plus"></i>
                    </button>
                    &nbsp;
                    &nbsp;
                    <button id="DAllocate" class="btn btn-sm btn-warning col-md-5" type="submit">
                        <span>De-Allocate</span>
                        <i class="glyphicon glyphicon-minus"></i>
                    </button>
                </div>
            </div>

        </div>
    </div>
}
<script>
    var USER_ROLES = {
        Process: function (action) {
            $.validator.unobtrusive.parse("#roleform");
            var data = {
                "__RequestVerificationToken": $("input[name='__RequestVerificationToken']").val(),
                "Action": action,
                "RoleId": $("#RoleId").val()
            };
            $.post("@Url.Action("Role", "Users")", data).done(function (response) {
                $("#roleBody").html(response);
                $.validator.unobtrusive.parse("#roleform");

            });
        },
        Init: function () {

            $("#Allocate").on('click', function (e) {
                $("#Action").value = true;
                USER_ROLES.Process(true);
                e.preventDefault();
            });

            $("#DAllocate").on('click', function (e) {
                USER_ROLES.Process(false);
                e.preventDefault();
            });
        }
    };
    $(function () {
        USER_ROLES.Init();
    });
</script>