@using PagedList.Mvc
@using PagedList
@using WebPortal.Models
@model IPagedList<UserListItemModel>
<table id="tblUsers" class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Username)
            </th>
            <th>
                Full Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DateOfBirth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Mobile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().NoOfAttempts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Blocked)
            </th>
            <th style="text-align: center; width: 152px;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="9" style=" text-align: center; ">
                    <b>No records found matching your query.</b>
                </td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Username)
                    </td>
                    <td>
                        @Html.Label(string.Format("{0} {1} {2}", item.FirstName, item.MiddleInitial, item.LastName))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfBirth, "DateTime")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mobile)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NoOfAttempts)
                    </td>
                    <td class="blocked">
                        @Html.DisplayFor(modelItem => item.Blocked, "Boolean")
                    </td>

                    <td style="width: 152px;">
                        <a class="bttnAssignThis  btn btn-sm btn-default pull-left" href="@Url.Action("Role", "Users", new {id = item.Username})" title="Role">
                            <i class="glyphicon glyphicon-lock"></i>
                            <span class="sr-only">Role</span>
                        </a>
                        <a class="bttnEditThis  btn btn-sm btn-default pull-left" href="@Url.Action("Edit", "Users", new {id = item.Username})" title="Edit">
                            <i class="glyphicon glyphicon-pencil"></i>
                            <span class="sr-only">Edit</span>
                        </a>
                        <a class="bttnDetail btn btn-sm btn-default pull-left" id="@item.Username" href="@Url.Action("Details", "Users", new {id = item.Username})" title="Details">
                            <i class="glyphicon glyphicon-list"></i>
                            <span class="sr-only">Edit</span>
                        </a>
                        <a class="bttnDeleteThis btn btn-sm btn-default pull-right" href="@Url.Action("Delete", "Users", new {id = item.Username})" title="Block">
                            <i class="glyphicon glyphicon-remove"></i>
                            <span class="sr-only">Block</span>
                        </a>
                    </td>
                </tr>
            }
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="0">
                @Html.PagedListPager(Model, p => Url.Action("Index", "Users",
                    new { p, sb = Request.QueryString["sb"], q = Request.QueryString["q"] }),
                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                        PagedListRenderOptions.ClassicPlusFirstAndLast,
                        new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "pagedList" }
                        ))

            </td>
        </tr>
    </tfoot>
</table>
<script>
    $(function () {
        USER_MANAGER.Search();
        USER_MANAGER.BindGridButtonEvents();
    });
</script>
