@using WebPortal.Models
@using PagedList.Mvc
@using PagedList
@model PagedList.IPagedList<WebPortal.Models.UserAccountViewModel>

@{
    ViewBag.Title = "Manage";
}

<div id="detailModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class=" glyphicon glyphicon-remove"></i></span>
                </button>
                <h4 class="modal-title">User Details</h4>
            </div>
            <div id="detailBody" class="modal-body well"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div id="editModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class=" glyphicon glyphicon-remove"></i></span>
                </button>
                <h4 class="modal-title">Edit User Details</h4>
            </div>
            <div id="editBody" class="modal-body well">
                @*load Edit Partial View Here*@
            </div>
            <div class="modal-footer">
                <button id="save-button" type="button" class="btn btn-warning">Save changes</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div id="deleteModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class=" glyphicon glyphicon-remove"></i></span>
                </button>
                <h4 class="modal-title">Deleting User</h4>
            </div>
            <div id="delBody" class="modal-body well">
                <p>Are you sure you want to delete?</p>
            </div>
            <div class="modal-footer">
                <button id="yes-button" type="button" class="btn btn-danger">Yes</button>
                <button type="button" class="btn btn-success" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading"><h2>Manage User Accounts</h2></div>
    <div class="panel-body">

        @using (Html.BeginForm("Manage", "Users", FormMethod.Get, new { id = "listform" }))
        {
            <div class="input-group col-md-3">
                <b>Search by: &nbsp;</b>
                @Html.RadioButton("sb", "username", true) <text> Username</text>
                @Html.RadioButton("sb", "fname") <text> Full Name</text>
            </div>
            <br />
            <div class="input-group col-md-3">
                <input id="query" type="text" placeholder="Search" name="q" class="form-control input-sm">
                <span class="input-group-btn">
                    <button id="Search" class="btn btn-default btn-sm" type="submit">
                        <i class="glyphicon glyphicon-search"></i>
                        Search
                    </button>
                </span>
            </div>
            <br /> <hr />
        }

        <table id="tblUsers" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Username)
                    </th>
                    <th>
                        Full Name
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().DateOfBirth)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Mobile)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().TypeID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().NoOfAttempts)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Blocked)
                    </th>
                    <th style="text-align: center; width: 118px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="9" style=" text-align: center; ">
                            <b>No records found matching your query.</b>
                        </td>
                    </tr>
                }
                else
                {
                    foreach (UserAccountViewModel item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Username)
                            </td>
                            <td>
                                @Html.Label(string.Format("{0} {1} {2}", item.FirstName, item.MiddleInitial, item.LastName))
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateOfBirth, "DateTime")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Mobile)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TypeName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NoOfAttempts)
                            </td>
                            <td class="blocked">
                                @Html.DisplayFor(modelItem => item.Blocked, "Boolean")
                            </td>

                            <td style="width: 118px;">
                                <a class="bttnEditThis  btn btn-sm btn-default pull-left" href="@Url.Action("Edit", "Users", new {id = item.Username})" title="Edit">
                                    <i class="glyphicon glyphicon-pencil"></i>
                                    <span class="sr-only">Edit</span>
                                </a>
                                <a class="bttnDetail btn btn-sm btn-default pull-left" id="@item.Username" href="@Url.Action("Details", "Users", new {id = item.Username})" title="Details">
                                    <i class="glyphicon glyphicon-list"></i>
                                    <span class="sr-only">Edit</span>
                                </a>
                                <a class="bttnDeleteThis btn btn-sm btn-default pull-right" href="@Url.Action("Delete", "Users", new {id = item.Username})" title="Delete">
                                    <i class="glyphicon glyphicon-trash"></i>
                                    <span class="sr-only">Delete</span>
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="panel-footer">
        @Html.PagedListPager(Model, page => Url.Action("Manage", "Users", new { page, sb = Request.QueryString["sb"], q = Request.QueryString["q"] }), new PagedListRenderOptions()
        {
            Display = PagedListDisplayMode.IfNeeded,
            DisplayEllipsesWhenNotShowingAllPageNumbers = true,
            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
            DisplayItemSliceAndTotal = true,
            MaximumPageNumbersToDisplay = 10
        })
    </div>
</div>


<script>
    var USER_MANAGER = {
        Search: function () {
            $('#Search').on('click', function (e) {
                e.preventDefault();
                $.get("@Url.Action("Manage","Users")?" + $('#listform').serialize()).done(function (response) {
                    var html = $(response).find("#tblUsers");
                    $("#tblUsers").replaceWith(html);
                });
            });
        },
        BindGridButtonEvents: function () {
            $(".bttnDetail").on("click", function (e) {
                e.preventDefault();
                var url = $(this).attr('href');
                $("#detailBody").load(url, function () {
                    $("#detailModal").modal('show');
                });
            });

            $(".bttnEditThis").on("click", function (e) {
                e.preventDefault();
                var url = $(this).attr('href');
                $row = $(this).closest("tr");

                $("#editBody").load(url, function () {
                    $("#editModal").modal('show');
                });
            });

            $(".bttnDeleteThis").on("click", function (e) {
                e.preventDefault();
                var url = $(this).attr('href');
                $row = $(this).closest("tr");
                $("#delBody").load(url, function () {
                    $("#deleteModal").modal('show');
                });
            });

        },
        Init: function () {
            this.BindGridButtonEvents();

            this.Search();

            $('#editModal').on('click', '#save-button', function () {
                $('#editform').submit();
            });

            $('#deleteModal').on('click', '#yes-button', function (e) {
                $('#deleteform').submit();
            });
        }
    };

    $(function () {
        USER_MANAGER.Init();
    });
</script>
