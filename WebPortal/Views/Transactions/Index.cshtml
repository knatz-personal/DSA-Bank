@using PagedList.Mvc
@using WebPortal.Models
@model TransactionViewModel

@{
    ViewBag.Title = "Index";
}

<div id="detailModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class=" glyphicon glyphicon-remove"></i></span>
                </button>
                <h4 class="modal-title">Transaction Details</h4>
            </div>
            <div id="detailBody" class="modal-body well"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading"><h2>My Transactions</h2></div>
    <div class="panel-body">
        <div class="row">
            @using (Html.BeginForm("Index", "Transactions", FormMethod.Get, new { id = "listform" }))
            {
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.AccountToListID, Model.MyAccounts, "Select Account", new { @class = "form-control  input-sm", Name = "a" })
                </div>
                <div class="input-group col-md-4">
                    <span class="input-group-addon">from</span>
                    @Html.EditorFor(model => model.StartDate, "DateFilterStart", "st")
                    <span class="input-group-addon">to</span>
                    @Html.EditorFor(model => model.EndDate, "DateFilterEnd", "ed")
                    <span class="input-group-btn">
                        <button id="filter" class="btn btn-default btn-sm" type="submit">
                            <i class="glyphicon glyphicon-filter"></i>
                            Filter
                        </button>
                    </span>
                </div>
            }
        </div>
        <table id="tblTansactions" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>

                        <input type="checkbox" value="false" />

                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        Remarks
                    </th>
                    <th>
                        Amount
                    </th>
                    <th>
                        <a class="btn btn-sm btn-default btn-block" href="@Url.Action("Report", "Transactions")" title="Create">
                            <i class="glyphicon glyphicon-print"></i>
                            <span>Print</span>
                        </a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.TransactionsPagedList.Any())
                {
                    <tr>
                        <td colspan="9" style=" text-align: center; ">
                            <b>No records found matching your query.</b>
                        </td>
                    </tr>
                }
                else
                {
                    foreach (TransactionListItemModel item in Model.TransactionsPagedList)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" value="false" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateIssued)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TypeName)
                                from account
                                <span class="@item.AccountFromID">
                                    @Html.DisplayFor(modelItem => item.AccountFromID)
                                </span>
                                to account
                                <span class="@item.AccountToID">
                                    @Html.DisplayFor(modelItem => item.AccountToID)
                                </span>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Remarks, "TruncatedMultilineText")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Currency)
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td style="width: 118px;">
                                <a class="bttnEditThis btn btn-sm btn-default pull-left" href="@Url.Action("Edit", "Transactions", new {id = item.ID})" title="Edit">
                                    <i class="glyphicon glyphicon-pencil"></i>
                                    <span class="sr-only">Edit</span>
                                </a>
                                <a class="bttnDetail btn btn-sm btn-default pull-left" id="@item.ID" href="@Url.Action("Details", "Transactions", new {id = item.ID})" title="Details">
                                    <i class="glyphicon glyphicon-list"></i>
                                    <span class="sr-only">Detail</span>
                                </a>
                                <a class="bttnDeleteThis btn btn-sm btn-default pull-right" href="@Url.Action("Delete", "Transactions", new {id = item.ID})" title="Delete">
                                    <i class="glyphicon glyphicon-trash"></i>
                                    <span class="sr-only">Delete</span>
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="panel-footer">
        @Html.PagedListPager(Model.TransactionsPagedList, page => Url.Action("Index", "Transactions", new { page, a = Request.QueryString["a"], st = Request.QueryString["st"], ed = Request.QueryString["a"] }), new PagedListRenderOptions
        {
            Display = PagedListDisplayMode.IfNeeded,
            DisplayEllipsesWhenNotShowingAllPageNumbers = true,
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayItemSliceAndTotal = true,
            MaximumPageNumbersToDisplay = 10
        })
    </div>
</div>
<script>
    var TRANSACTION_PROCESSING = {
        DateTimePicker: function () {
            $(".date").datetimepicker({
                format: 'DD/MM/YYYY'
            });
        },
        Filter: function () {
            $('#filter').on('click', function (e) {
                e.preventDefault();
                $.get("@Url.Action("Index","Transactions")?" + $('#listform').serialize()).done(function (response) {
                    var html = $(response).find("#tblTansactions");
                    $("#tblTansactions").replaceWith(html);
                    TRANSACTION_PROCESSING.HighLight();
                    TRANSACTION_PROCESSING.BindGridButtonEvents();
                });
            });
        },
        BindGridButtonEvents: function () {
            $(".bttnDetail").on("click", function (e) {
                e.preventDefault();
                var url = $(this).attr('href');
                $("#detailBody").load(url, function () {
                    $("#detailModal").modal('show');
                });
            });
        },
        HighLight: function () {
            var accno = $("#AccountToListID").val();
            $("tbody tr td ." + accno).addClass("text-warning");
        },
        Init: function () {
            this.BindGridButtonEvents();
            this.Filter();
            this.DateTimePicker();

            console.log("TRANSACTION_PROCESSING Initiated");
        }
    };

    $(function () {
        TRANSACTION_PROCESSING.Init();
    });
</script>