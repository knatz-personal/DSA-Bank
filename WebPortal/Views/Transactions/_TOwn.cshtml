@model WebPortal.Models.TransferOwnModel
@{
    Model.Currencies = (SelectList)Session["Currencies"];
    Model.MyAccounts = (SelectList)Session["MyAccounts"];
}

@using (Html.BeginForm("Personal Transfer", "Transactions", FormMethod.Post, new { id = "transferform" }))
{
    @Html.AntiForgeryToken()
    <div class="well col-md-offset-3 col-md-6">
        <div class="form-horizontal">
            <fieldset>
                <div id="infoAlert" class="alert alert-success collapse" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true"><i class=" glyphicon glyphicon-remove"></i></span>
                    </button>
                    <p id="successMessage"></p>
                </div>
                @if (ViewData.ModelState[string.Empty] != null && ViewData.ModelState[string.Empty].Errors.Any())
                {
                    <div id="editAlert" class="alert alert-danger" data-dismiss="alert" role="alert">
                        <button type="button" class="close" aria-label="Close">
                            <span aria-hidden="true"><i class=" glyphicon glyphicon-remove"></i></span>
                        </button>
                        @Html.ValidationSummary(true, "Error: ")
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { rows = 10, @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountFromID, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AccountFromID, Model.MyAccounts, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AccountFromID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountToID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AccountToID, Model.MyAccounts, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AccountToID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Currency, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Currency, Model.Currencies, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Amount, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Submit" class="btn btn-warning btn-block" />
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
}
